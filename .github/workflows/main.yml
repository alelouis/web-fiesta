name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 
  
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2.1.1 
      - uses: extractions/setup-just@v1
        with:
          just-version: '0.10'
      - uses: conda-incubator/setup-miniconda@v2.1.1 
        with:
          environment-file: fiesta-back/environment.yml
          activate-environment: fiesta
      - name: Pytest
        run: just test-back
          

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
        with:
          just-version: '0.10'
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Build angular
        run: |
          cd fiesta-front
          sed -i 's/to_be_replaced/${{ env.tag }}/g' src/environments/environment.prod.ts
          npm install -g @angular/cli
          npm install --save-dev @angular-devkit/build-angular
          cd ..
          just build-prod-front

      - name: Build and push Docker image
        run: docker build . --tag alelouis/web-fiesta:${GITHUB_REF##*/} --push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy on server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.OVH_HOST }}
          username: ${{ secrets.OVH_USER }}
          key: ${{ secrets.OVH_KEY }}
          port: 22
          script: |
            cd /home/alelouis/Projects/nginx-certbot
            sh update-ws.sh